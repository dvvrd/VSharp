METHOD: System.Int32 VSharp.Test.Tests.PDR.BreakCallSitesCompositionRecursion(System.Int32)
RESULT: Totally 16 states:
-65 + n + n + n + n + n + n + n + n + n + n + n + n + n
MEMORY DUMP:
Path condition: !(-1 + n <= 0) /\ !(-10 + n <= 0) /\ !(-11 + n <= 0) /\ !(-2 + n <= 0) /\ !(-3 + n <= 0) /\ !(-4 + n <= 0) /\ !(-5 + n <= 0) /\ !(-6 + n <= 0) /\ !(-7 + n <= 0) /\ !(-8 + n <= 0) /\ !(-9 + n <= 0) /\ !(n <= 0) /\ -12 + n <= 0
--------------- Stack: ---------------
key = __loc__0, value = -66 + n + n + n + n + n + n + n + n + n + n + n + n
key = n, value = -4 + n
Initialized types = { VSharp.Test.Tests.PDR }

-77 + n + n + n + n + n + n + n + n + n + n + n + n + n + n
MEMORY DUMP:
Path condition: !(-1 + n <= 0) /\ !(-10 + n <= 0) /\ !(-11 + n <= 0) /\ !(-12 + n <= 0) /\ !(-2 + n <= 0) /\ !(-3 + n <= 0) /\ !(-4 + n <= 0) /\ !(-5 + n <= 0) /\ !(-6 + n <= 0) /\ !(-7 + n <= 0) /\ !(-8 + n <= 0) /\ !(-9 + n <= 0) /\ !(n <= 0) /\ -13 + n <= 0
--------------- Stack: ---------------
key = __loc__0, value = -78 + n + n + n + n + n + n + n + n + n + n + n + n + n
key = n, value = -4 + n
Initialized types = { VSharp.Test.Tests.PDR }

-20 + n + n + n + n + n + n + n + n
MEMORY DUMP:
Path condition: !(-1 + n <= 0) /\ !(-2 + n <= 0) /\ !(-3 + n <= 0) /\ !(-4 + n <= 0) /\ !(-5 + n <= 0) /\ !(-6 + n <= 0) /\ !(n <= 0) /\ -7 + n <= 0
--------------- Stack: ---------------
key = __loc__0, value = -21 + n + n + n + n + n + n + n
key = n, value = -2 + n
Initialized types = { VSharp.Test.Tests.PDR }

1 + n + n
MEMORY DUMP:
Path condition: !(n <= 0) /\ -1 + n <= 0
--------------- Stack: ---------------
key = __loc__0, value = n
Initialized types = { VSharp.Test.Tests.PDR }

-44 + n + n + n + n + n + n + n + n + n + n + n
MEMORY DUMP:
Path condition: !(-1 + n <= 0) /\ !(-2 + n <= 0) /\ !(-3 + n <= 0) /\ !(-4 + n <= 0) /\ !(-5 + n <= 0) /\ !(-6 + n <= 0) /\ !(-7 + n <= 0) /\ !(-8 + n <= 0) /\ !(-9 + n <= 0) /\ !(n <= 0) /\ -10 + n <= 0
--------------- Stack: ---------------
key = __loc__0, value = -45 + n + n + n + n + n + n + n + n + n + n
key = n, value = -4 + n
Initialized types = { VSharp.Test.Tests.PDR }

-54 + n + n + n + n + n + n + n + n + n + n + n + n
MEMORY DUMP:
Path condition: !(-1 + n <= 0) /\ !(-10 + n <= 0) /\ !(-2 + n <= 0) /\ !(-3 + n <= 0) /\ !(-4 + n <= 0) /\ !(-5 + n <= 0) /\ !(-6 + n <= 0) /\ !(-7 + n <= 0) /\ !(-8 + n <= 0) /\ !(-9 + n <= 0) /\ !(n <= 0) /\ -11 + n <= 0
--------------- Stack: ---------------
key = __loc__0, value = -55 + n + n + n + n + n + n + n + n + n + n + n
key = n, value = -4 + n
Initialized types = { VSharp.Test.Tests.PDR }

1 + n
MEMORY DUMP:
Path condition: n <= 0
--------------- Stack: ---------------
key = __loc__0, value = 0
Initialized types = { VSharp.Test.Tests.PDR }

-9 + n + n + n + n + n + n
MEMORY DUMP:
Path condition: !(-1 + n <= 0) /\ !(-2 + n <= 0) /\ !(-3 + n <= 0) /\ !(-4 + n <= 0) /\ !(n <= 0) /\ -5 + n <= 0
--------------- Stack: ---------------
key = __loc__0, value = -10 + n + n + n + n + n
key = n, value = -2 + n
Initialized types = { VSharp.Test.Tests.PDR }

-35 + n + n + n + n + n + n + n + n + n + n
MEMORY DUMP:
Path condition: !(-1 + n <= 0) /\ !(-2 + n <= 0) /\ !(-3 + n <= 0) /\ !(-4 + n <= 0) /\ !(-5 + n <= 0) /\ !(-6 + n <= 0) /\ !(-7 + n <= 0) /\ !(-8 + n <= 0) /\ !(n <= 0) /\ -9 + n <= 0
--------------- Stack: ---------------
key = __loc__0, value = -36 + n + n + n + n + n + n + n + n + n
key = n, value = -2 + n
Initialized types = { VSharp.Test.Tests.PDR }

-104 + n + n + n + n + n + n + n + n + n + n + n + n + n + n + n + n
MEMORY DUMP:
Path condition: !(-1 + n <= 0) /\ !(-10 + n <= 0) /\ !(-11 + n <= 0) /\ !(-12 + n <= 0) /\ !(-13 + n <= 0) /\ !(-14 + n <= 0) /\ !(-2 + n <= 0) /\ !(-3 + n <= 0) /\ !(-4 + n <= 0) /\ !(-5 + n <= 0) /\ !(-6 + n <= 0) /\ !(-7 + n <= 0) /\ !(-8 + n <= 0) /\ !(-9 + n <= 0) /\ !(n <= 0) /\ -15 + n <= 0
--------------- Stack: ---------------
key = __loc__0, value = -105 + n + n + n + n + n + n + n + n + n + n + n + n + n + n + n
key = n, value = -4 + n
Initialized types = { VSharp.Test.Tests.PDR }

n + n + n
MEMORY DUMP:
Path condition: !(-1 + n <= 0) /\ !(n <= 0) /\ -2 + n <= 0
--------------- Stack: ---------------
key = __loc__0, value = -1 + n + n
key = n, value = -1 + n
Initialized types = { VSharp.Test.Tests.PDR }

-14 + n + n + n + n + n + n + n
MEMORY DUMP:
Path condition: !(-1 + n <= 0) /\ !(-2 + n <= 0) /\ !(-3 + n <= 0) /\ !(-4 + n <= 0) /\ !(-5 + n <= 0) /\ !(n <= 0) /\ -6 + n <= 0
--------------- Stack: ---------------
key = __loc__0, value = -15 + n + n + n + n + n + n
key = n, value = -2 + n
Initialized types = { VSharp.Test.Tests.PDR }

-5 + n + n + n + n + n
MEMORY DUMP:
Path condition: !(-1 + n <= 0) /\ !(-2 + n <= 0) /\ !(-3 + n <= 0) /\ !(n <= 0) /\ -4 + n <= 0
--------------- Stack: ---------------
key = __loc__0, value = -6 + n + n + n + n
key = n, value = -2 + n
Initialized types = { VSharp.Test.Tests.PDR }

-90 + n + n + n + n + n + n + n + n + n + n + n + n + n + n + n
MEMORY DUMP:
Path condition: !(-1 + n <= 0) /\ !(-10 + n <= 0) /\ !(-11 + n <= 0) /\ !(-12 + n <= 0) /\ !(-13 + n <= 0) /\ !(-2 + n <= 0) /\ !(-3 + n <= 0) /\ !(-4 + n <= 0) /\ !(-5 + n <= 0) /\ !(-6 + n <= 0) /\ !(-7 + n <= 0) /\ !(-8 + n <= 0) /\ !(-9 + n <= 0) /\ !(n <= 0) /\ -14 + n <= 0
--------------- Stack: ---------------
key = __loc__0, value = -91 + n + n + n + n + n + n + n + n + n + n + n + n + n + n
key = n, value = -4 + n
Initialized types = { VSharp.Test.Tests.PDR }

-27 + n + n + n + n + n + n + n + n + n
MEMORY DUMP:
Path condition: !(-1 + n <= 0) /\ !(-2 + n <= 0) /\ !(-3 + n <= 0) /\ !(-4 + n <= 0) /\ !(-5 + n <= 0) /\ !(-6 + n <= 0) /\ !(-7 + n <= 0) /\ !(n <= 0) /\ -8 + n <= 0
--------------- Stack: ---------------
key = __loc__0, value = -28 + n + n + n + n + n + n + n + n
key = n, value = -2 + n
Initialized types = { VSharp.Test.Tests.PDR }

-2 + n + n + n + n
MEMORY DUMP:
Path condition: !(-1 + n <= 0) /\ !(-2 + n <= 0) /\ !(n <= 0) /\ -3 + n <= 0
--------------- Stack: ---------------
key = __loc__0, value = -3 + n + n + n
key = n, value = -1 + n
Initialized types = { VSharp.Test.Tests.PDR }
